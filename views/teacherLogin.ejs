<!DOCTYPE html>
<html>
<head>
	<link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
	<style>
		body, html {
			height: 100%;
			font-family: Arial, Helvetica, sans-serif;
		}
		* {
			box-sizing: border-box;
		}

		#regForm {
			background-color: #ffffff;
			margin: 100px auto;
			font-family: Raleway;
			padding: 40px;
			width: 30%;
			min-width: 300px;
		}

		h1 {
			text-align: center;  
		}

		input {
			padding: 10px;
			width: 100%;
			font-size: 17px;
			font-family: Raleway;
			border: 1px solid #aaaaaa;
		}

		/* Mark input boxes that gets an error on validation: */
		input.invalid {
			background-color: #ffdddd;
		}

		/* Hide all steps by default: */
		.tab {
			display: none;
		}

		button {
			background-color: #4CAF50;
			color: #ffffff;
			border: none;
			padding: 10px 20px;
			font-size: 17px;
			font-family: Raleway;
			cursor: pointer;
		}

		button:hover {
			opacity: 0.8;
		}

		#prevBtn {
			background-color: #bbbbbb;
		}

		/* Make circles that indicate the steps of the form: */
		.step {
			height: 15px;
			width: 15px;
			margin: 0 2px;
			background-color: #bbbbbb;
			border: none;  
			border-radius: 50%;
			display: inline-block;
			opacity: 0.5;
		}

		.step.active {
			opacity: 1;
		}

		/* Mark the steps that are finished and valid: */
		.step.finish {
			background-color: #4CAF50;
		}
		.bg-img {
		/* The image used */
			background-image: url("/image/bk1.jpg");

			min-height: 380px;

			/* Center and scale the image nicely */
			background-position: center;
			background-repeat: no-repeat;
			background-size: cover;
			position: relative;
		}   
		* {
			box-sizing: border-box;
		}

		/* Create three equal columns that floats next to each other */
		.column {
			float: left;
			width: 33.33%;
			padding: 10px;
		}

		/* Clear floats after the columns */
		.row:after {
			content: "";
			display: table;
			clear: both;
		}
		.input-container {
			display: -ms-flexbox; /* IE10 */
			display: flex;
			width: 100%;
			margin-bottom: 15px;
		}

		.icon {
			padding: 10px;
			background: dodgerblue;
			color: white;
			min-width: 50px;
			text-align: center;
		}
		.input-field {
			width: 100%;
			padding: 10px;
			outline: none;
		}

		.input-field:focus {
			border: 2px solid dodgerblue;
		}
	</style>

</head>

<body class="bg-img">
	
	<form id="regForm" action="/teacher" class="w3-animate-opacity w3-card-4 w3-display-middle " style="margin-top: 10%;" method="post">
		<h2 style="text-align: center;">老師登錄:</h2>
		<img class="w3-card-4" src="/image/img_avatar3.png" alt="Person" style="width:50%; display:block; margin:auto;">

		<div>
		<div class="tab">帳號:
			<div class="input-container w3-center w3-animate-opacity">
				<i class="fa fa-user icon"></i>
				<input class="input-field" placeholder="Email..." oninput="this.className = ''" name="email">
			</div>
		</div>
		<div class="tab">輸入密碼:
			<div class="input-container w3-center w3-animate-opacity">
				<i class="fa fa-key icon"></i>
				<input class="input-field" placeholder="Password..." oninput="this.className = ''" name="passwd">
				
			</div>
			<div class="g-recaptcha" data-sitekey="6LfmBrwUAAAAALGR2Sa_TbrwgALOi8ignjxnIGF0"></div>
		</div>
		<div style="overflow:auto;">
			<div style="float:right;">
				<button type="button" id="prevBtn" onclick="nextPrev(-1)">Previous</button>
				<button type="button" id="nextBtn" onclick="nextPrev(1)">Next</button>
			</div>
		</div>
		<!--<script src="https://www.google.com/recaptcha/api.js" async defer></script>-->
		<!-- Circles which indicates the steps of the form: -->
		<div style="text-align:center;margin-top:40px;">
			<span class="step"></span>
			<span class="step"></span>

		</div>
	</form>

	<script>
		var currentTab = 0; // Current tab is set to be the first tab (0)
		showTab(currentTab); // Display the current tab

	function showTab(n) {
	  // This function will display the specified tab of the form...
		var x = document.getElementsByClassName("tab");
	  	x[n].style.display = "block";
	  //... and fix the Previous/Next buttons:
		if (n == 0) {
		document.getElementById("prevBtn").style.display = "none";
		} else {
		document.getElementById("prevBtn").style.display = "inline";
		}
		if (n == (x.length - 1)) {
		document.getElementById("nextBtn").innerHTML = "Submit";
		} else {
		document.getElementById("nextBtn").innerHTML = "Next";
		}
		//... and run a function that will display the correct step indicator:
		fixStepIndicator(n)
	}

	function nextPrev(n) {
		// This function will figure out which tab to display
		var x = document.getElementsByClassName("tab");
		// Exit the function if any field in the current tab is invalid:
		if (n == 1 && !validateForm()) return false;
		// Hide the current tab:
		x[currentTab].style.display = "none";
		// Increase or decrease the current tab by 1:
		currentTab = currentTab + n;
		// if you have reached the end of the form...
		if (currentTab >= x.length) {
		// ... the form gets submitted:
		document.getElementById("regForm").submit();
		return false;
		}
		// Otherwise, display the correct tab:
		showTab(currentTab);
	}

	function validateForm() {
	// This function deals with validation of the form fields
		var x, y, i, valid = true;
		x = document.getElementsByClassName("tab");
		y = x[currentTab].getElementsByTagName("input");
		// A loop that checks every input field in the current tab:
		for (i = 0; i < y.length; i++) {
		// If a field is empty...
		if (y[i].value == "") {
		// add an "invalid" class to the field:
			y[i].className += " invalid";
			// and set the current valid status to false
			valid = false;
			}
		}
		// If the valid status is true, mark the step as finished and valid:
		if (valid) {
		document.getElementsByClassName("step")[currentTab].className += " finish";
		}
		return valid; // return the valid status
	}

	function fixStepIndicator(n) {
	// This function removes the "active" class of all steps...
		var i, x = document.getElementsByClassName("step");
		for (i = 0; i < x.length; i++) {
			x[i].className = x[i].className.replace(" active", "");
		}
		//... and adds the "active" class on the current step:
		x[n].className += " active";
	}
</script>

</body>
</html>